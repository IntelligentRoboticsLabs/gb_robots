max_obstacle_height: 1.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.275  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

map_type: voxel

obstacle_layer:
  enabled:              true
  max_obstacle_height:  1.6
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             4
  unknown_threshold:    15
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 3.0
  publish_voxel_map: false
  observation_sources: scan

  scan:
    data_type: LaserScan
    topic: scan
    marking: false
    clearing: true
    min_obstacle_height: 0.1
    max_obstacle_height: 1.6


obstacle_layer_local:
  enabled:              true
  max_obstacle_height:  1.6
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             4
  unknown_threshold:    15
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  true    #true needed for disabling global path planning through unknown space
  obstacle_range: 6.0
  raytrace_range: 6.0
  publish_voxel_map: false
  observation_sources: scan_local

  scan_local:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true
    max_obstacle_height: 1.6
  
obstacle_rgbd_layer:
    enabled: true
    observation_sources: rgbd_scan
    combination_method: 1

    rgbd_scan:
      sensor_frame: rgbd_laser_link
      data_type: LaserScan
      topic: rgbd_scan
      expected_update_rate: 0.2
      observation_persistence: 0.0
      inf_is_valid: true
      marking: true
      clearing: true
      raytrace_range: 2.9
      obstacle_range: 2.8
      blanking_range: 1.55
      mark_blanking: true
      min_obstacle_height: -0.1
      max_obstacle_height: 0.2
      debug: false



#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     1.0  # max. distance from an obstacle at which costs are incurred for planning paths.

inflation_social_layer:
  enabled:              true
  cost_scaling_factor:  10.0
  inflation_radius:     0.1

static_layer:
  enabled:              true

proxemic_layer:
  enabled:              true
  cutoff: 5.0
  amplitude: 254.0
  covariance: 0.12
  factor: 5.0
  exit_px: 0.0
  exit_py: 0.0
  visualization_only: false
  generate_paths: false
  default_emotion: 4.0
